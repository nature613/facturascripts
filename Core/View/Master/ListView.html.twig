{% import _self as macros %}
{% set currentView = fsc.getCurrentView() %}

<script type="text/javascript">
    function listViewSetOffset(viewName, value) {
        $("#formListView" + viewName + " :input[name=\"offset\"]").val(value);
        $("#formListView" + viewName).submit();
    }
    function listViewSetOrder(viewName, value) {
        $("#formListView" + viewName + " :input[name=\"order\"]").val(value);
        $("#formListView" + viewName).submit();
    }
    function listViewShowFilters(viewName) {
        $("#formListView" + viewName + "Filters").toggle();
    }
</script>

<br/>

<form id="formListView{{ currentView.getViewName() }}" method="post">
    <input type="hidden" name="activetab" value="{{ currentView.getViewName() }}"/>
    <input type="hidden" name="offset" value="{{ currentView.offset }}"/>
    <input type="hidden" name="order" value="{{ currentView.orderKey }}"/>
    <div class="container-fluid">
        <div class="row">
            <div class="col">
                <div class="btn-group">
                    <a href="{{ currentView.model.url('new') }}" class="btn btn-success">
                        <i class="fas fa-plus fa-fw" aria-hidden="true"></i>
                    </a>
                    <button type="button" class="btn btn-danger">
                        <i class="fas fa-trash fa-fw" aria-hidden="true"></i>
                    </button>
                </div>
                <div class="btn-group">
                    {{ macros.printButton(fsc, currentView, i18n) }}
                </div>
            </div>
            {% if currentView.searchFields is not empty %}
                {{ macros.searchControl(currentView, i18n) }}
            {% endif %}
            {% if currentView.filters is not empty %}
                <div class="col">
                    <button type="button" class="btn btn-light" onclick="listViewShowFilters('{{ currentView.getViewName() }}');">
                        <i class="fas fa-filter fa-fw" aria-hidden="true"></i> {{ i18n.trans('filters') }}
                    </button>
                </div>
            {% endif %}
            {% if currentView.orderOptions is empty %}
                <div class="col">
                    <br/><br/>
                </div>
            {% else %}
                {{ macros.sortButton(currentView) }}
            {% endif %}
        </div>
        <div id="formListView{{ currentView.getViewName() }}Filters" class="row" style="display: none;">
            {% for filterName, filter in currentView.filters %}
                {{ filter.render() | raw }}
            {% endfor %}
        </div>
    </div>
    <div class="table-responsive">
        <table class="table table-hover">
            <thead>
                <tr>

                </tr>
            </thead>
            <tbody>
                {% for model in currentView.cursor %}
                    <tr class="clickableRow" data-href="{{ model.url() }}">
                        <td class="cancelClickable">
                            <div class="form-check form-check-inline mb-2 mr-sm-2 mb-sm-0">
                                <input class="form-check-input listAction" type="checkbox" name="code[]" value="{{ model.primaryColumnValue() }}" />
                            </div>
                        </td>
                        {% for field in model.getModelFields() %}
                            <td>{{ attribute(model, field.name) }}</td>
                        {% endfor %}
                    </tr>
                {% else %}
                    <tr class="table-warning">
                        <td>{{ i18n.trans('no-data') }}</td>
                    </tr>
                {% endfor %}
            </tbody>
        </table>
    </div>
</form>

<div class="text-center">
    <div class="btn-group">
        {% for page in currentView.getPagination() %}
            {% if page.active %}
                <button type="button" class="btn btn-light active" onclick="listViewSetOffset('{{ currentView.getViewName() }}', '{{ page.offset }}');">{{ page.num }}</button>
            {% else %}
                <button type="button" class="btn btn-light" onclick="listViewSetOffset('{{ currentView.getViewName() }}', '{{ page.offset }}');">{{ page.num }}</button>
            {% endif %}
        {% endfor %}
    </div>
</div>

{% macro printButton(fsc, currentView, i18n) %}
    <div class="dropdown">
        <button class="btn btn-light dropdown-toggle" type="button" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
            <i class="fas fa-print fa-fw" aria-hidden="true"></i>
        </button>
        <div class="dropdown-menu">
            {% for key, option in fsc.exportManager.options() %}
                <a href="{{ currentView.model.url() }}?action=export&option={{ key }}" class="dropdown-item">
                    <i class="fas {{ option.icon }} fa-fw" aria-hidden="true"></i>
                    {{ i18n.trans(option.description) }}
                </a>
            {% endfor %}
        </div>
    </div>
{% endmacro %}

{% macro searchControl(currentView, i18n) %}
    <div class="col">
        <div class="form-group">
            <div class="input-group">
                <input class="form-control" type="text" name="query" value="{{ currentView.query }}" autocomplete="off" placeholder="{{ i18n.trans('search') }}"/>
                <span class="input-group-append">
                    <button class="btn btn-primary" type="submit">
                        <i class="fas fa-search" aria-hidden="true"></i>
                    </button>
                </span>
            </div>
        </div>
    </div>
{% endmacro %}

{% macro sortButton(currentView) %}
    <div class="col text-right">
        <div class="form-group">
            <div class="btn-group">
                <button class="btn btn-light dropdown-toggle" type="button" data-toggle="dropdown" aria-haspopup="true" aria-expanded="true">
                    <i class="fas {{ currentView.orderOptions[currentView.orderKey]['icon'] }} fa-fw" aria-hidden="true"></i>
                    {{ currentView.orderOptions[currentView.orderKey]['label'] }}
                    <span class="caret"></span>
                </button>
                <div class="dropdown-menu dropdown-menu-right">
                    {% for key, orderby in currentView.orderOptions %}
                        {% set activeClass = (currentView.orderKey == key) ? ' active' : '' %}
                        <a class="dropdown-item{{ activeClass }}" href="#" onclick="listViewSetOrder('{{ currentView.getViewName() }}', '{{ key }}');">
                            <i class="fas {{ orderby['icon'] }} fa-fw" aria-hidden="true"></i> {{ orderby['label'] }}
                        </a>
                    {% endfor %}
                </div>
            </div>
        </div>
    </div>
{% endmacro %}